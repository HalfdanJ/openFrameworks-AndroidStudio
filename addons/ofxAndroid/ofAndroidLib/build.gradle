apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "cc.openframeworks.cc"
        minSdkVersion 8
        targetSdkVersion 17
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['java']
            resources.srcDirs = ['java']
            aidl.srcDirs = ['java']
            renderscript.srcDirs = ['java']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task compileOpenFrameworks(dependsOn: rootProject.ofNdkSetup) {
    def projectRoot = file("$rootDir/libs/openFrameworksCompiled/project")
    def pathsFile = file("$projectRoot/android/paths.make")
    pathsFile.withPrintWriter { out ->
        out.println("NDK_ROOT=${rootProject.ofNdkSetup.ext.ndkDirectory}")
        out.println("SDK_ROOT=${rootProject.ofNdkSetup.ext.sdkDirectory}")
    }
    rootProject.ofRunMake(["-C", projectRoot.absolutePath, "PLATFORM_OS=Android"])
}

assembleDebug {
    doLast {
        tasks.compileOpenFrameworks.execute()
    }
}

assembleRelease {
    doLast {
        tasks.compileOpenFrameworks.execute()
    }
}
